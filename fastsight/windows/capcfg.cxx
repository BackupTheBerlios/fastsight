// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include "capcfg.h"
#include <stdio.h>
#include <stdlib.h>
#include <windows.h>
#include <vfw.h>
#include "cfgmanager.h"
static unsigned char opt_to_id[30];
static unsigned char id_to_opt[30];

Fl_Double_Window *capcfgwnd=(Fl_Double_Window *)0;

static void cb_OK(Fl_Return_Button*, void*) {
  char stmp[16];
sprintf(stmp, "%d", opt_to_id[capdevice->value()]);
cfgmanager_set_value("cap_id", stmp);
capcfgwnd->hide();
}

Fl_Choice *capdevice=(Fl_Choice *)0;

static Fl_Double_Window* make_capcfg_wnd() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = capcfgwnd = new Fl_Double_Window(325, 95, "Video device settings");
    w = o;
    o->color(FL_LIGHT2);
    { Fl_Return_Button* o = new Fl_Return_Button(225, 55, 85, 25, "OK");
      o->box(FL_PLASTIC_THIN_UP_BOX);
      o->callback((Fl_Callback*)cb_OK);
    }
    { Fl_Choice* o = capdevice = new Fl_Choice(65, 20, 250, 22, "Device:");
      o->down_box(FL_BORDER_BOX);
      o->textsize(11);
    }
    o->end();
  }
  char sname[256];
char scomment[512];
char slinet[1024];
char sline[1024];
unsigned int i, j = 0, k, l;
for(i = 0; i < 30; i++)
{
  id_to_opt[i] = 0;
  if(capGetDriverDescription(i, sname, 255, scomment, 511))
  {
     id_to_opt[i] = j;
     opt_to_id[j++] = i;
     sprintf(slinet, "[%d] %s %s", i, sname, scomment);
     l = 0;
     for(k = 0; k <= strlen(slinet); k++)
     {
       if(slinet[k]=='&'||slinet[k]=='/'||slinet[k]=='\\'||slinet[k]=='_')
         sline[l++] = '\\';
       sline[l++] = slinet[k];
     }
     capdevice->add(sline, 0, 0, 0, 0);
  }
}
  return w;
}

void capture_config() {
  char *scfg;
if(!capcfgwnd)
  make_capcfg_wnd();
if(!(scfg = cfgmanager_get_value("cap_id")))
  cfgmanager_set_value("cap_id", scfg = "0");
capdevice->value(id_to_opt[atoi(scfg)]);
capcfgwnd->show();
}
