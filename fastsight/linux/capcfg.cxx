// generated by Fast Light User Interface Designer (fluid) version 1.0106

#include "capcfg.h"
#include <stdio.h>
#include <stdlib.h>
#include "cfgmanager.h"
#include "capturepriv.h"

Fl_Double_Window *capcfgwnd=(Fl_Double_Window *)0;

Fl_File_Input *videodev=(Fl_File_Input *)0;

Fl_Input *videochan=(Fl_Input *)0;

Fl_Slider *brightness=(Fl_Slider *)0;

static void cb_brightness(Fl_Slider*, void*) {
  capture_set_brightness((int)brightness->value());
}

Fl_Slider *contrast=(Fl_Slider *)0;

static void cb_contrast(Fl_Slider*, void*) {
  capture_set_contrast((int)contrast->value());
}

static void cb_OK(Fl_Return_Button*, void*) {
  char stmp[16];
cfgmanager_set_value("videodev", (char *)videodev->value());
cfgmanager_set_value("videochan", (char *)videochan->value());
sprintf(stmp, "%d", (int)brightness->value());
cfgmanager_set_value("brightness", stmp);
sprintf(stmp, "%d", (int)contrast->value());
cfgmanager_set_value("contrast", stmp);
capcfgwnd->hide();
}

static Fl_Double_Window* make_capcfg_wnd() {
  Fl_Double_Window* w;
  { Fl_Double_Window* o = capcfgwnd = new Fl_Double_Window(330, 170, "Video device settings");
    w = o;
    o->color(FL_LIGHT2);
    { Fl_File_Input* o = videodev = new Fl_File_Input(105, 10, 215, 30, "Video device:");
      o->tooltip("The video4linux device from which we will capture.");
      o->box(FL_PLASTIC_THIN_DOWN_BOX);
    }
    { Fl_Input* o = videochan = new Fl_Input(105, 45, 215, 25, "Channel:");
      o->tooltip("The device channel from which we will capture.");
      o->box(FL_PLASTIC_THIN_DOWN_BOX);
    }
    { Fl_Slider* o = brightness = new Fl_Slider(105, 76, 215, 20, "Brightness:");
      o->tooltip("Brightness of the image.");
      o->type(5);
      o->box(FL_PLASTIC_THIN_DOWN_BOX);
      o->maximum(65535);
      o->value(32768);
      o->callback((Fl_Callback*)cb_brightness);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Slider* o = contrast = new Fl_Slider(105, 102, 215, 20, "Contrast:");
      o->tooltip("Contrast of the image.");
      o->type(5);
      o->box(FL_PLASTIC_THIN_DOWN_BOX);
      o->maximum(65535);
      o->value(32768);
      o->callback((Fl_Callback*)cb_contrast);
      o->align(FL_ALIGN_LEFT);
    }
    { Fl_Return_Button* o = new Fl_Return_Button(235, 135, 85, 25, "OK");
      o->box(FL_PLASTIC_THIN_UP_BOX);
      o->callback((Fl_Callback*)cb_OK);
    }
    o->end();
  }
  return w;
}

void capture_config() {
  char *scfg;
if(!capcfgwnd)
  make_capcfg_wnd();
if(!(scfg = cfgmanager_get_value("videodev")))
  cfgmanager_set_value("videodev", scfg = "/dev/video0");
videodev->value(scfg);
if(!(scfg = cfgmanager_get_value("videochan")))
  cfgmanager_set_value("videochan", scfg = "0");
videochan->value(scfg);
if(!(scfg = cfgmanager_get_value("brightness")))
  cfgmanager_set_value("brightness", scfg = "32768");
brightness->value((double)atoi(scfg));
if(!(scfg = cfgmanager_get_value("contrast")))
  cfgmanager_set_value("contrast", scfg = "32768");
contrast->value((double)atoi(scfg));
capcfgwnd->show();
}
